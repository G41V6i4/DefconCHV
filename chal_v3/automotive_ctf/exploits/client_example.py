import websocket
import json
import hmac
import hashlib

class CANClient:
    def __init__(self, server_url):
        self.server_url = server_url
        self.ws = None
        self.session_id = None
        
    def connect(self):
        self.ws = websocket.WebSocket()
        self.ws.connect(self.server_url)
        welcome = json.loads(self.ws.recv())
        return welcome['challenge']
        
    def authenticate(self, challenge):
        secret_key = b"CTF_CAN_GATEWAY_SECRET_2024"
        response = hmac.new(secret_key, challenge.encode(), hashlib.sha256).hexdigest()
        auth_msg = {"type": "auth", "challenge": challenge, "response": response}
        self.ws.send(json.dumps(auth_msg))
        result = json.loads(self.ws.recv())
        return result['type'] == 'auth_success'
        
    def send_can_message(self, can_id, data):
        message = {"type": "can_send", "can_id": can_id, "data": data}
        self.ws.send(json.dumps(message))

if __name__ == "__main__":
    client = CANClient("ws://localhost:8080")
    challenge = client.connect()
    if client.authenticate(challenge):
        print("Authenticated!")
